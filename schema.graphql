### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


scalar DateTime

type Mutation {
  createService(data: ServiceCreateInput!): Service!
  createVisitor(data: VisitorCreateInput!): Visitor!
}

type Query {
  service(where: ServiceWhereUniqueInput!): Service
  services(after: ServiceWhereUniqueInput, before: ServiceWhereUniqueInput, first: Int, last: Int, skip: Int): [Service!]!
  visitor(where: VisitorWhereUniqueInput!): Visitor
  visitors(after: VisitorWhereUniqueInput, before: VisitorWhereUniqueInput, first: Int, last: Int, skip: Int): [Visitor!]!
}

type Service {
  id: Int!
  numberOfAllowedVisitors: Int!
  registrationStartsAt: DateTime
  serviceStartsAt: DateTime!
  visitors: [Visitor!]!
}

input ServiceCreateInput {
  numberOfAllowedVisitors: Int!
  registrationStartsAt: DateTime
  serviceStartsAt: DateTime!
  visitors: VisitorCreateManyWithoutServiceInput
}

input ServiceCreateOneWithoutVisitorsInput {
  connect: ServiceWhereUniqueInput
  create: ServiceCreateWithoutVisitorsInput
}

input ServiceCreateWithoutVisitorsInput {
  numberOfAllowedVisitors: Int!
  registrationStartsAt: DateTime
  serviceStartsAt: DateTime!
}

input ServiceWhereUniqueInput {
  id: Int
}

type Visitor {
  city: String!
  email: String
  id: Int!
  name: String!
  phone: String!
  service: Service!
  street: String!
  zip: String!
}

input VisitorCreateInput {
  city: String!
  email: String
  name: String!
  phone: String!
  service: ServiceCreateOneWithoutVisitorsInput!
  street: String!
  zip: String!
}

input VisitorCreateManyWithoutServiceInput {
  connect: [VisitorWhereUniqueInput!]
  create: [VisitorCreateWithoutServiceInput!]
}

input VisitorCreateWithoutServiceInput {
  city: String!
  email: String
  name: String!
  phone: String!
  street: String!
  zip: String!
}

input VisitorWhereUniqueInput {
  id: Int
}
