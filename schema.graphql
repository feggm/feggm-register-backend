### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

scalar DateTime

type DynamicField {
  id: Int!
  key: String!
  label: String!
  required: Boolean!
  type: String!
}

scalar Json

type Mutation {
  createAnonymousVisitor(serviceId: Int!): Visitor!
  createService(additionalInfo: String, noDateConflict: Boolean, numberOfAllowedVisitors: Int!, registrationEndsAt: DateTime, registrationStartsAt: DateTime, serviceStartsAt: DateTime!): Service!
  createVisitor(additionalData: Json, city: String!, email: String, name: String!, phone: String!, serviceIds: [Int!]!, street: String!, surname: String!, zip: String!): [Visitor!]!
  deleteService(id: Int!): Service
  setText(key: String!, value: String!): Text!
}

type Query {
  currentService: Service
  currentServices: [Service!]
  dynamicFields: [DynamicField!]
  services: [Service!]!
  text(key: String!): String
  texts: [Text!]!
}

type Service {
  additionalInfo: String

  """The number of places that are still left free"""
  freePlaces: Int!
  id: Int!
  noDateConflict: Boolean!
  numberOfAllowedVisitors: Int!

  """The number of places that are already reserved"""
  numberOfVisitors: Int!
  registrationEndsAt: DateTime
  registrationStartsAt: DateTime
  serviceStartsAt: DateTime!

  """only authenticated admins can view visitors data"""
  visitors: [Visitor!]!
}

type Text {
  id: Int!
  key: String!
  value: String
}

type Visitor {
  additionalData: Json
  city: String!
  email: String
  id: Int!
  name: String!
  phone: String!
  service: Service!
  street: String!
  surname: String!
  zip: String!
}
